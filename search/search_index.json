{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introducci\u00f3n \u00b6 El robot EscornaRover dise\u00f1o de OPCION3D convierte al robot Escornabot en un robot con tracci\u00f3n en las cuatro ruedas. El Escornabot Escornabot Singularis Se redise\u00f1a en un robot rover EscornaRover EscornaRover En este repositorio encontrar\u00e1s desarrollo y programaci\u00f3n del robot para distintos proyectos. En contrucci\u00f3n","title":"Introducci\u00f3n"},{"location":"#introduccion","text":"El robot EscornaRover dise\u00f1o de OPCION3D convierte al robot Escornabot en un robot con tracci\u00f3n en las cuatro ruedas. El Escornabot Escornabot Singularis Se redise\u00f1a en un robot rover EscornaRover EscornaRover En este repositorio encontrar\u00e1s desarrollo y programaci\u00f3n del robot para distintos proyectos. En contrucci\u00f3n","title":"Introducci\u00f3n"},{"location":"about/","text":"Autores \u00b6 Manuel Hidalgo - LeoBot Divulgador de Rob\u00f3tica Educativa y OpenSource","title":"Autores"},{"location":"about/#autores","text":"Manuel Hidalgo - LeoBot Divulgador de Rob\u00f3tica Educativa y OpenSource","title":"Autores"},{"location":"imagenes/","text":"Galer\u00eda de im\u00e1genes y videos \u00b6","title":"Imagenes"},{"location":"imagenes/#galeria-de-imagenes-y-videos","text":"","title":"Galer\u00eda de im\u00e1genes y videos"},{"location":"misionMarte/","text":"Misi\u00f3n Marte \u00b6 En contrucci\u00f3n El robot EscornaRover controlado remotamente con una app App Inventor y equipado con un sensor de temperatura por infrarrojos explora la superficie de Marte buscando rocas con hielo y se\u00f1alizando (luminoso-ac\u00fastico) su localizaci\u00f3n. EscornaRover Explorador App de control del EscornaRover El robot Rover Marciano , controlado con una app de la plataforma Blynk , se encarga de arrastrar a la roca localizada a la base de Marte. Rover Marciano App de control del Rover","title":"Introducci\u00f3n"},{"location":"misionMarte/#mision-marte","text":"En contrucci\u00f3n El robot EscornaRover controlado remotamente con una app App Inventor y equipado con un sensor de temperatura por infrarrojos explora la superficie de Marte buscando rocas con hielo y se\u00f1alizando (luminoso-ac\u00fastico) su localizaci\u00f3n. EscornaRover Explorador App de control del EscornaRover El robot Rover Marciano , controlado con una app de la plataforma Blynk , se encarga de arrastrar a la roca localizada a la base de Marte. Rover Marciano App de control del Rover","title":"Misi\u00f3n Marte"},{"location":"misionMarte/colaboradores/","text":"Colaboradores \u00b6 Manuel Hidalgo - LeoBot Divulgador de Rob\u00f3tica Educativa y OpenSource Ismael Esturillo Estudiante de Secundaria - Maker","title":"Colaboradores"},{"location":"misionMarte/colaboradores/#colaboradores","text":"Manuel Hidalgo - LeoBot Divulgador de Rob\u00f3tica Educativa y OpenSource Ismael Esturillo Estudiante de Secundaria - Maker","title":"Colaboradores"},{"location":"misionMarte/explorador/","text":"EscornaRover Explorador \u00b6 El EscornaRover Explorador est\u00e1 redise\u00f1ado para adaptarse a los retos de la Misi\u00f3n a Marte. La altura y colocaci\u00f3n de los soportes para la tarjeta CPU est\u00e1n modificados: La altura debido a que se ha cambiado a un portapilas de 2x16850 para aumentar la autonom\u00eda. La versi\u00f3n de la CPU 2.20 tiene una longitud mayor. Portapilas 2x18650 CPU v2.12 CPU v2.20 Comparaci\u00f3n de chasis EscornaRover Los m\u00f3dulos electr\u00f3nicos que se a\u00f1aden son: M\u00f3dulo bluetooth HC-06 o HC-05 para las comunicaci\u00f3n con la app del m\u00f3vil. Sensor de temperatura por IR. Bluetooth HC-06 Temperatura IR App de control \u00b6 Programaci\u00f3n Arduino Nano \u00b6","title":"EscornaRover Explorador"},{"location":"misionMarte/explorador/#escornarover-explorador","text":"El EscornaRover Explorador est\u00e1 redise\u00f1ado para adaptarse a los retos de la Misi\u00f3n a Marte. La altura y colocaci\u00f3n de los soportes para la tarjeta CPU est\u00e1n modificados: La altura debido a que se ha cambiado a un portapilas de 2x16850 para aumentar la autonom\u00eda. La versi\u00f3n de la CPU 2.20 tiene una longitud mayor. Portapilas 2x18650 CPU v2.12 CPU v2.20 Comparaci\u00f3n de chasis EscornaRover Los m\u00f3dulos electr\u00f3nicos que se a\u00f1aden son: M\u00f3dulo bluetooth HC-06 o HC-05 para las comunicaci\u00f3n con la app del m\u00f3vil. Sensor de temperatura por IR. Bluetooth HC-06 Temperatura IR","title":"EscornaRover Explorador"},{"location":"misionMarte/explorador/#app-de-control","text":"","title":"App de control"},{"location":"misionMarte/explorador/#programacion-arduino-nano","text":"","title":"Programaci\u00f3n Arduino Nano"},{"location":"misionMarte/rover/","text":"El robot Rover Marciano creado y desarrollado por la comunidad CantaRobots . En la Misi\u00f3n a Marte hemos utilizado el robot Rover Marciano para recoger, arrastrar y llevar las rocas con hielo a la base. Elementos \u00b6 Los elementos de nuestro rover: Conexionado de motores \u00b6 App de control \u00b6 Blynk \u00b6 Blynk es una plataforma de IoT independiente del hardware y basada en la nube que permite a los usuarios conectar hardware con la nube Blynk segura y de c\u00f3digo abierto a trav\u00e9s de wifi, 2G-4G, LTE o Ethernet. Arquitectura Blynk Programaci\u00f3n App \u00b6 El control de la electr\u00f3nica de los movimientos de robot rover se desarrolla con la plataforma Blynk utilizando el widget Joystick y configurando los ejes como pines Virtuales V0 y V1 . Desde la app dise\u00f1ada de Blynk en el m\u00f3vil enviamos los valores a las variables X e Y del programa ArduinoBlocks en el Rover Marciano . El widget Joystick tiene dos ejes (X e Y) con valores entre 0 y 1023. En el punto de reposo, en el centro, X= 512 e Y= 512. En el programa ArduinoBlocks utilizamos los valores entre 400 y 600 para los l\u00edmites de los movimientos. Programaci\u00f3n ESP8266/NodeMCU \u00b6 La programaci\u00f3n se desarrolla con el lenguaje visual de programaci\u00f3n ArduinoBlocks para un proyecto tipo ESP8266/NodeMCU v2. Inicializaci\u00f3n comunicaciones \u00b6 En el bloque de \"Inicializar\" colocamos los bloques para conectarnos a la wifi poniendo el nombre (SSID) y la clave, el bloque de Blynk para la comunicaci\u00f3n con el servidor y el bloque de comunicaci\u00f3n al puerto serie (opcional). Recepci\u00f3n de datos \u00b6 De la App del m\u00f3vil vamos a recibir datos correspondientes al movimiento del joystick. Estos datos se reciben por un bloque de Blynk correspondiente a los pines virtuales declarados en la App y asignados a las variables X e Y del programa de robot. Programa principal \u00b6 El bloque \"Bucle\" empieza con los bloques de instrucciones (opcionales) que env\u00eda el valor de las variables X e Y a la Consola (puerto serie) que recibe del la App de Blynk . Estos valores nos sirve para ajustar los movimientos del robot rover. Los bloques de instrucciones condicionales determinan el movimiento del Rover Marciano seg\u00fan los valores recibidos en las variables X e Y.","title":"Rover Marciano"},{"location":"misionMarte/rover/#elementos","text":"Los elementos de nuestro rover:","title":"Elementos"},{"location":"misionMarte/rover/#conexionado-de-motores","text":"","title":"Conexionado de motores"},{"location":"misionMarte/rover/#app-de-control","text":"","title":"App de control"},{"location":"misionMarte/rover/#blynk","text":"Blynk es una plataforma de IoT independiente del hardware y basada en la nube que permite a los usuarios conectar hardware con la nube Blynk segura y de c\u00f3digo abierto a trav\u00e9s de wifi, 2G-4G, LTE o Ethernet. Arquitectura Blynk","title":"Blynk"},{"location":"misionMarte/rover/#programacion-app","text":"El control de la electr\u00f3nica de los movimientos de robot rover se desarrolla con la plataforma Blynk utilizando el widget Joystick y configurando los ejes como pines Virtuales V0 y V1 . Desde la app dise\u00f1ada de Blynk en el m\u00f3vil enviamos los valores a las variables X e Y del programa ArduinoBlocks en el Rover Marciano . El widget Joystick tiene dos ejes (X e Y) con valores entre 0 y 1023. En el punto de reposo, en el centro, X= 512 e Y= 512. En el programa ArduinoBlocks utilizamos los valores entre 400 y 600 para los l\u00edmites de los movimientos.","title":"Programaci\u00f3n App"},{"location":"misionMarte/rover/#programacion-esp8266nodemcu","text":"La programaci\u00f3n se desarrolla con el lenguaje visual de programaci\u00f3n ArduinoBlocks para un proyecto tipo ESP8266/NodeMCU v2.","title":"Programaci\u00f3n ESP8266/NodeMCU"},{"location":"misionMarte/rover/#inicializacion-comunicaciones","text":"En el bloque de \"Inicializar\" colocamos los bloques para conectarnos a la wifi poniendo el nombre (SSID) y la clave, el bloque de Blynk para la comunicaci\u00f3n con el servidor y el bloque de comunicaci\u00f3n al puerto serie (opcional).","title":"Inicializaci\u00f3n comunicaciones"},{"location":"misionMarte/rover/#recepcion-de-datos","text":"De la App del m\u00f3vil vamos a recibir datos correspondientes al movimiento del joystick. Estos datos se reciben por un bloque de Blynk correspondiente a los pines virtuales declarados en la App y asignados a las variables X e Y del programa de robot.","title":"Recepci\u00f3n de datos"},{"location":"misionMarte/rover/#programa-principal","text":"El bloque \"Bucle\" empieza con los bloques de instrucciones (opcionales) que env\u00eda el valor de las variables X e Y a la Consola (puerto serie) que recibe del la App de Blynk . Estos valores nos sirve para ajustar los movimientos del robot rover. Los bloques de instrucciones condicionales determinan el movimiento del Rover Marciano seg\u00fan los valores recibidos en las variables X e Y.","title":"Programa principal"}]}